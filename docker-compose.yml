---
version: '3'

services:
  mosquitto:
    restart: on-failure
    image: eclipse-mosquitto:2.0.15
    container_name: mosquitto
    volumes:
      - ./mosquitto:/mosquitto/config
    ports:
      - "1883:1883"

  zookeeper:
    restart: on-failure
    image: confluentinc/cp-zookeeper:7.0.1
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  broker:
    restart: on-failure
    image: confluentinc/cp-kafka:7.0.1
    container_name: broker
    ports:
      - "9091:9091"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LOCAL:PLAINTEXT,APP:PLAINTEXT,INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: LOCAL://localhost:9091,APP://broker:9092,INTERNAL://broker:29092
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1

  schema-registry:
    restart: on-failure
    image: confluentinc/cp-schema-registry:7.0.1
    hostname: schema-registry
    container_name: schema-registry
    depends_on:
      - broker
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: 'broker:29092'
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081

  connect:
    restart: on-failure
    build: 
      dockerfile: ./kafka/Dockerfile
    container_name: connect
    ports: 
      - "8083:8083"
    volumes:
      - ./certs:/usr/share/certs
    depends_on:
      - broker
      - schema-registry
    environment:
      CONNECT_BOOTSTRAP_SERVERS: broker:29092
      CONNECT_REST_PORT: 28082
      CONNECT_GROUP_ID: "quickstart"
      CONNECT_CONFIG_STORAGE_TOPIC: "connect-config"
      CONNECT_OFFSET_STORAGE_TOPIC: "connect-offsets"
      CONNECT_STATUS_STORAGE_TOPIC: "connect-status"
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_KEY_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_INTERNAL_KEY_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_INTERNAL_VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_REST_ADVERTISED_HOST_NAME: "localhost"
      CONNECT_PLUGIN_PATH: "/usr/share/java,/usr/share/confluent-hub-components"

  elastic:
    restart: on-failure
    image: docker.elastic.co/elasticsearch/elasticsearch:8.4.0
    container_name: es-node01
    ports:
      - "9200:9200"
      - "9300:9300"
    networks:
      - elastic
      - default
    volumes:
      - esdata:/usr/share/elasticsearch/data
      - ./certs:/usr/share/elasticsearch/config/certs
      - ./elastic/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
    environment:
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD:?err}
      
  kibana:
    restart: on-failure
    image: docker.elastic.co/kibana/kibana:8.4.0
    container_name: kib-01
    ports:
      - "5601:5601"
    networks:
      - elastic

  graphHopper:
    restart: on-failure
    image: israelhikingmap/graphhopper
    container_name: graph
    command: --host 0.0.0.0
    volumes:
      - ./graphhopper/maps:/graphhopper/maps
    ports:
      - 8989:8989
    environment:
      - FILE=maps/data.pbf

  bus:
    restart: on-failure
    build: ./bus
    depends_on:
      - graphHopper
      - mosquitto
    volumes:
      - ./data:/bus/data

  rhino:
    restart: on-failure
    build: ./rhino
    depends_on:
      - mosquitto
      - broker
  
  lion: 
    restart: on-failure
    build: ./lion
    depends_on:
      - bus
      - broker
      - mosquitto
  
  client:
    restart: on-failure
    build: ./client
    depends_on:
      - lion
    volumes:
      - ./data:/client/data
    

volumes:
  esdata:
    driver: local

networks:
  elastic:
  